@using AslHMS.Models
@model AslHMS.Models.DTO.BillMasterDTO

@{
    ViewBag.Title = "Index";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    var InUserId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedUserID"]);

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }
    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);

    AslHMSApiContext db = new AslHMSApiContext();

    List<SelectListItem> billid = new List<SelectListItem>();

    var fetchdata = (from n in db.HMS_HEADIO where n.COMPID == compid && n.HEADTP == "IPD" select n).ToList();

    foreach (var x in fetchdata)
    {
        billid.Add(new SelectListItem { Text = x.HEADNM, Value = Convert.ToString(x.HEADID) });
    }


    List<SelectListItem> refer = new List<SelectListItem>();
    var fetch_refer = (from n in db.HMS_REFER where n.COMPID == compid select n).ToList();
    foreach (var x in fetch_refer)
    {
        refer.Add(new SelectListItem { Text = x.REFERNM, Value = Convert.ToString(x.REFERID) });
    }

    List<SelectListItem> gender = new List<SelectListItem>();


    gender.Add(new SelectListItem { Text = "Male", Value = "Male" });
    gender.Add(new SelectListItem { Text = "Female", Value = "Female" });

    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);



}
<style>
    .selectClass {
        font-size: 11px;
        /*font-family: 'Impact', cursive;*/
    }
</style>


<link href="~/Content/newcss/jquery-ui.css" rel="stylesheet" />


<link href="~/Content/newcss/ng-grid.css" rel="stylesheet" />
<link rel="stylesheet" href="~/Content/style.css" />

<link href="~/Content/bootstrap_datepicker_css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap_datepicker_css/datepicker3.css" rel="stylesheet" />
@*bootstrap -Clock Picker*@
<link href="~/Content/bootstrap_clock_picker/src/clockpicker.css" rel="stylesheet" />
<script src="~/Content/bootstrap_clock_picker/src/clockpicker.js"></script>
<link href="~/Content/bootstrap_clock_picker/src/standalone.css" rel="stylesheet" />




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Bill Information - INDOOR</h1>

        <div class="btn-group pull-right" id="editOption">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i>
            </button>
            <ul class="dropdown-menu pull-right" style="" role="menu">

                <li>
                    <a href="@Url.Action("Index", "Bill")"><i class="fa fa-plus"></i> Create</a>
                </li>
                @*<li>
                        <a href="@Url.Action("Update", "Opd")"><i class="fa fa-edit"></i> Update</a>
                    </li>*@
                @*<li>
                        <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                    </li>*@

            </ul>
        </div>

    </div>
    @*<br />*@

    <div class="col-md-12">
        <div class="form-group">
            @Html.HiddenFor(model => model.COMPID, new { id = "txtcompid", style = "width:3em;", @Value = compid })

            @Html.HiddenFor(model => model.INSUSERID, new { id = "InUserID", style = "width:5em;", @Value = InUserId })



            <div ng-app="BillApp" data-ng-controller="ApiBillController">
                <div class="row">
                    <div class="col-md-9">
                        <div class="panel panel-primary">
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <tr hidden><td><input type="submit" value="Refresh" class="btn btn-primary" id="refreshid" /></td></tr>
                                    <tr hidden>
                                        <td class="col-md-1"></td>
                                        <td class="col-md-1"></td>
                                        <td class="col-md-1"></td>
                                        <td class="col-md-1"></td>
                                        <td class="col-md-1"></td>
                                        <td class="col-md-1"></td>
                                        <td class="col-md-1"></td>
                                        <td class="col-md-1"></td>
                                        <td class="col-md-1"></td>

                                    </tr>
                                    <tr>
                                        <td colspan="2"><label>Date</label></td>
                                        <td colspan="2"><label>Year</label></td>
                                        <td colspan="3"><label>BillNo</label></td>
                                        <td colspan="2"><label>Patient Year</label></td>

                                    </tr>
                                    <tr>
                                        <td colspan="2">
                                            @Html.TextBoxFor(model => model.BILLDT, new
                                            {
                                                id = "BILLDT",
                                                @class = "form-control input-sm" @*@Value = currentDateTime.ToString("dd-MMM-yyyy")*@ })
                                        </td>
                                        <td colspan="2">@Html.TextBoxFor(model => model.BILLYY, new { id = "BILLYY", @class = "form-control input-sm", @readonly = "readonly" })</td>
                                        <td colspan="3">@Html.TextBoxFor(model => model.BILLNO, new { id = "BILLNO", @class = "form-control input-sm", @readonly = "readonly" })</td>
                                        <td colspan="2">@Html.TextBoxFor(model => model.PATIENTYY, new { id = "PATIENTYY", @class = "form-control input-sm" })</td>

                                    </tr>
                                    <tr>
                                        <td colspan="2"><label>PatientYearID</label></td>
                                        <td colspan="3"><label>Patient Name</label></td>
                                        <td colspan="2"><label>Discharge Date</label></td>
                                        <td colspan="2"><label>Discharge Time</label></td>
                                    </tr>
                                    <tr>
                                        <td colspan="2">
                                            @Html.TextBoxFor(model => model.PATIENTYYID, new
                                            {
                                                id = "PATIENTYYID",
                                                @class = "form-control input-sm"
                                            })
                                        </td>
                                        <td colspan="3">@Html.TextBoxFor(model => model.PatientName, new { id = "PatientName", @class = "form-control input-sm", @readonly = "readonly", tabIndex = "-1" })</td>
                                        <td colspan="2">@Html.TextBoxFor(model => model.DISCHGDT, new { id = "DISCHGDT", @class = "form-control input-sm" })</td>

                                        <td colspan="2" class="clockpicker" data-align="top" data-autoclose="true">
                                            @Html.TextBoxFor(model => model.DISCHGTM, new { id = "DISCHGTM", @class = "form-control input-sm", @Value = "00:01" })

                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="2"><label>Remarks</label></td>
                                        <td colspan="5"><span>@Html.TextBoxFor(model => model.RemarksMaster, new { id = "RemarksMaster", @class = "form-control input-sm" })</span></td>

                                        <td class="col-md-2"><input type="submit" value="Submit" data-ng-click="add($event)" class="btn btn-primary" id="submitid" /></td>

                                    </tr>
                                </table>
                            </div>
                        </div>
                        @Html.TextBoxFor(model => model.INSLTUDE, new { id = "latlonPos", style = "display: none;" })
                        <input id="lat" type="hidden" />
                        <input id="lon" type="hidden" />

                        <div class="panel panel-primary">
                            <div class="table-responsive">
                                <table class="table table-striped" ng-init=" items.total={}">
                                    <tr>
                                        <td class="col-md-3"><label>Bill Name</label></td>

                                        <td class="col-md-2"><label>Amount</label></td>
                                        <td class="col-md-3"><label>Remarks</label></td>

                                        <td class="col-md-1"></td>
                                    </tr>
                                    <tr>


                                        <td class="col-md-3">
                                            @Html.DropDownListFor(model => model.BILLID, billid, "--Select--", new
                                            {
                                                id = "BILLID",
                                                data_ng_model = "newChild.BILLID",
                                                @class = "form-control input-sm"

                                            })
                                            @*<input data-ng-model="newChild.BILLID" id="BILLID" class="form-control input-sm" />*@
                                        </td>
                                        <td class="col-md-2"><input data-ng-model="newChild.AMOUNT" id="AMOUNT" readonly="readonly" class="form-control input-sm" tabindex="-1" /></td>
                                        <td class="col-md-3"><input data-ng-model="newChild.RemarksChild" id="RemarksChild" class="form-control input-sm" /></td>

                                        <td class="col-md-1"><input type="submit" id="insertid" value="Insert" data-ng-click="addrow($event)" class="btn btn-primary" /></td>

                                    </tr>

                                    <tr data-ng-repeat="item in BillData">
                                        <td hidden><strong data-ng-hide="item.editMode">{{item.ID}}</strong></td>
                                        <td hidden><strong data-ng-hide="item.editMode">{{item.BILLSL}}</strong></td>
                                        <td class="col-md-3">
                                            <p data-ng-hide="item.editMode">{{ item.BillName }}</p>
                                            @Html.DropDownListFor(model => model.BILLID, billid, "--Select--", new
                                            {
                                                id = "BILLID",
                                                data_ng_show = "item.editMode",
                                                data_ng_model = "item.BILLID",
                                                @class = "form-control input-sm"

                                            })

                                        </td>

                                        <td class="col-md-2">
                                            <p data-ng-hide="item.editMode">{{ item.AMOUNT }}</p>
                                            @*<input data-ng-show="item.editMode" type="text" data-ng-model="item.AMOUNT" class="form-control input-sm" />*@
                                        </td>
                                        <td class="col-md-3">
                                            <p data-ng-hide="item.editMode">{{ item.RemarksChild }}</p>
                                            <input data-ng-show="item.editMode" type="text" data-ng-model="item.RemarksChild" class="form-control input-sm" />
                                        </td>


                                        <td class="col-md-1">
                                            <p data-ng-hide="item.editMode"><a data-ng-click="toggleEdit(item)" href="javascript:;">Edit</a> | <a data-ng-click="deleteitem(item)" href="javascript:;">Delete</a></p>
                                            <p data-ng-show="item.editMode"><a data-ng-click="save(item)" href="javascript:;">Save</a> | <a data-ng-click="cancel()" href="javascript:;">Cancel</a></p>

                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="1"><b>Total:</b> </td>
                                        <td colspan="1"><p id="gridTotalamount">{{GetSummOfAmount(BillData)}}</p></td>
                                        <td colspan="2"></td>

                                    </tr>

                                </table>

                            </div>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="row">
                            <ul class="nav nav-tabs nav-justified" role="tablist" style="background-color: #D3D3D3;">
                                <li role="presentation" class="active"><a href="#basic" aria-controls="home" role="tab" data-toggle="tab" style="color:black ">Transaction</a></li>
                                @*<li role="presentation"><a href="#accounts" aria-controls="profile" role="tab" data-toggle="tab" style="color:black " id="Acc">Collection</a></li>*@

                            </ul>
                        </div>
                    </div>
                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="basic">
                            <div class="col-md-3">
                                <div class="row">
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <tr>
                                                <td colspan="1"><label>Total Amount</label></td>
                                                <td colspan="2">
                                                    @Html.TextBoxFor(model => model.TOTAMT, new { id = "TOTAMT", @class = "form-control input-sm", @readonly = "readonly" })
                                                </td>

                                            </tr>
                                            <tr>
                                                <td colspan="1"><label>SCHARGE</label></td>
                                                <td colspan="2">@Html.TextBoxFor(model => model.SCHARGE, new { id = "SCHARGE", @class = "form-control input-sm", @readonly = "readonly" })</td>
                                            </tr>
                                            <tr>
                                                <td colspan="1"><label>VAT</label></td>
                                                <td colspan="2">@Html.TextBoxFor(model => model.VATAMT, new { id = "VATAMT", @class = "form-control input-sm", @Value = "0" })</td>
                                            </tr>
                                            <tr>
                                                <td colspan="1"><label>Gross</label></td>
                                                <td colspan="2">@Html.TextBoxFor(model => model.GROSSAMT, new { id = "GROSSAMT", @class = "form-control input-sm", @readonly = "readonly", tabIndex = "-1" })</td>

                                                @*@Html.ValidationMessageFor(model => model.MObileNo, "", new { @class = "text-danger" })*@
                                            </tr>
                                            <tr>
                                                <td colspan="1"><label> Advance</label></td>
                                                <td colspan="2">@Html.TextBoxFor(model => model.ADVAMT, new { id = "ADVAMT", @class = "form-control input-sm", @Value = "0" })</td>
                                            </tr>
                                            <tr>
                                                <td colspan="1"><label> Discount</label></td>
                                                <td colspan="2">@Html.TextBoxFor(model => model.DISCOUNT, new { id = "DISCOUNT", @class = "form-control input-sm", @Value = "0" })</td>
                                            </tr>
                                            <tr>
                                                <td colspan="1"><label>DISCID</label></td>
                                                <td colspan="2">@Html.DropDownListFor(model => model.DISCID, refer, "--Select--", new { id = "DISCID", @class = "form-control input-sm" })</td>
                                            </tr>
                                            <tr>
                                                <td colspan="1"><label>Net</label></td>
                                                <td colspan="2">@Html.TextBoxFor(model => model.NETAMT, new { id = "NETAMT", @class = "form-control input-sm", @readonly = "readonly", tabIndex = "-1" })</td>
                                            </tr>
                                            <tr>
                                                <td colspan="1"><label>Paid</label></td>
                                                <td colspan="2">@Html.TextBoxFor(model => model.PAIDAMT, new { id = "PAIDAMT", @class = "form-control input-sm" })</td>
                                            </tr>


                                            <tr>
                                                <td colspan="1"><label> Balance</label></td>
                                                <td colspan="2">@Html.TextBoxFor(model => model.BALAMT, new { id = "BALAMT", @class = "form-control input-sm", @readonly = "readonly", tabIndex = "-1" })</td>
                                            </tr>

                                            <tr>
                                                <td colspan="1"><label>DUEHID</label></td>
                                                <td colspan="2">@Html.DropDownListFor(model => model.DUEHID, refer, "--Select--", new { id = "DUEHID", @class = "form-control input-sm" })</td>
                                            </tr>
                                            <tr>
                                                <td colspan="1"></td>
                                                <td colspan="2">
                                                    <input type="submit" value="Complete" class="btn btn-primary" data-ng-click="add2ndPart($event)" />
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>


                </div>
            </div>
        </div>
    </div>

    //datatime picker script
    <script type="text/javascript">
        $('.clockpicker').clockpicker();
    </script>

    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>


    <script type="text/javascript">
        $(document).ready(function () {

            $("#DUEHID").attr("disabled", "disabled");
            $("#DISCID").attr("disabled", "disabled");

            $('#BILLDT').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function (e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                }
                else {
                    $(this).data('stickyDate', null);

                }
            }).on('hide', function () {
                document.getElementById('PATIENTYY').focus();
            }).on('changeDate', dateChanged);

            $("#PATIENTYY").datepicker({
                format: "yyyy", // Notice the Extra space at the beginning
                viewMode: "years",
                minViewMode: "years",
                autoclose: true
            });

            $('#DISCHGDT').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function (e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                }
                else {
                    $(this).data('stickyDate', null);

                }
            }).on('hide', function () {
                document.getElementById('DISCHGTM').focus();
            });

            $('#PATIENTYYID').autocomplete({
                source: function (request, response) {
                    var compid = $('#txtcompid').val();
                    var year = $('#PATIENTYY').val();
                    $.ajax({
                        url: '/api/apiPatinetConsult/PatientYID',
                        type: 'GET',
                        cache: false,
                        data: { query: request.term, query2: compid, Year: year },
                        dataType: 'json',
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item,
                                    value: item,


                                };
                            }));
                        }
                    });
                },
                select: function (event, ui) {
                    $('#PATIENTYYID').val(ui.item.label);


                    txtOneChanged();

                },
                change: $('#PATIENTYYID').keyup(_.debounce(txtOneChanged, 500))
            });


            $('#BILLID').change(function () {
                var compid = $('#txtcompid').val();
                var billid = $('#BILLID').val();
                $.ajax({
                    url: '/ApiBill/getAmount',
                    type: 'GET',
                    cache: false,
                    data: { Billid: billid, Compid: compid },
                    dataType: 'json',
                    success: function (data) {
                        $('#AMOUNT').val(data);

                        document.getElementById("RemarksChild").focus();
                    }
                });
            });

            $('#VATAMT').change(function () {
                var total = $('#TOTAMT').val();
                var scharge = $('#SCHARGE').val();
                var vat = $('#VATAMT').val();
                var gross = Number(total) + Number(scharge) + Number(vat);
                $('#GROSSAMT').val(gross);
            });

            $("#DISCOUNT").change(function () {
                var a = parseInt($("#GROSSAMT").val());
                var b = parseInt($("#ADVAMT").val());
                var c = parseInt($("#DISCOUNT").val());
                $("#NETAMT").val(a - b - c);

                var discount = parseInt($("#DISCOUNT").val());
                if (discount > 0) {
                    $("#DISCID").removeAttr("disabled");
                    document.getElementById("DISCID").focus();
                } else {
                    $("#DISCID").val("");
                    $("#DISCID").attr("disabled", "disabled");
                }


            });
            $("#PAIDAMT").change(function () {
                var a = parseInt($("#NETAMT").val());
                var b = parseInt($("#PAIDAMT").val());

                $("#BALAMT").val(a - b);

                var bal = parseInt($("#BALAMT").val());
                if (bal > 0) {
                    $("#DUEHID").removeAttr("disabled");
                    document.getElementById("DUEHID").focus();
                } else {
                    $("#DUEHID").val("");
                    $("#DUEHID").attr("disabled", "disabled");
                }


            });


        });

        function dateChanged(ev) {


            var changedtxt = $('#BILLDT').val();
            var changedtxt2 = $('#txtcompid').val();

            var txtBillyear = document.getElementById('BILLYY');
            var txtBillNo = document.getElementById('BILLNO');

            $("#BILLYY").val("");

            $("#BILLNO").val("");

            $.getJSON(
                "apiBill/getyearAndBillno", { "Changedtxt": changedtxt, "Changedtxt2": changedtxt2 },
                function (myData) {
                    txtBillyear.value = myData[0];
                    txtBillNo.value = myData[1];


                    //document.getElementById("PATIENTYY").focus();
                });

        }




        function txtOneChanged() {


            var changedText = $("#PATIENTYYID").val();
            var changedText2 = $('#txtcompid').val();
            var year = $('#PATIENTYY').val();

            //var Name = document.getElementById('PatientYearID');
            var txtBox = document.getElementById('PATIENTYYID');

            var txtBox2 = document.getElementById('PatientName');

            if (changedText != "") {
                $.getJSON(
                 '/api/PatientName', { "ChangedText": changedText, "ChangedText2": changedText2 },//apiCabinBed
                 function (result) {

                     txtBox2.value = result;






                 });

                $.getJSON(
                    '/api/apiPatinetConsult/DynamicPatinetYearId', {
                        "ChangedText": changedText, "ChangedText2": changedText2, "Year": year
                    },
                    function (result) {

                        txtBox.value = result;






                    });

            }



        }







    </script>


}

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>

<script src="~/Scripts/bootstrap-datepicker.js"></script>



<script src="~/Scripts/angularjs/1.0.5/angular.js"></script>

<script src="~/Scripts/Bill/Bill.js"></script>

<script src="~/Scripts/angularjs/ui-bootstrap-tpls-0.4.0.js"></script>




<script src="~/Scripts/Underscore.js"></script>














