@using AslHMS.Models
@model AslHMS.Models.DTO.OpHeadDTO

@{
    ViewBag.Title = "Index";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    var InUserId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedUserID"]);

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }
    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);

    AslHMSApiContext db = new AslHMSApiContext();

    List<SelectListItem> type = new List<SelectListItem>();


    type.Add(new SelectListItem { Text = "Test", Value = "Test" });
    type.Add(new SelectListItem { Text = "Group", Value = "Group" });

    List<SelectListItem> gender = new List<SelectListItem>();


    gender.Add(new SelectListItem { Text = "Male", Value = "Male" });
    gender.Add(new SelectListItem { Text = "Female", Value = "Female" });

    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);

}



<link href="~/Content/newcss/jquery-ui.css" rel="stylesheet" />


<link href="~/Content/newcss/ng-grid.css" rel="stylesheet" />
<link rel="stylesheet" href="~/Content/style.css" />



<script src="~/Content/jquery1.8.0/jquery.min.js"></script>


<script src="~/Content/jquery1.9.1/jquery-1.9.1.js"></script>


<script src="~/Content/jquery1.10.3/jquery-ui.js"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Operation Head Information</h1>

        <div class="btn-group pull-right" id="editOption">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i>
            </button>
            <ul class="dropdown-menu pull-right" style="" role="menu">

                <li>
                    <a href="@Url.Action("Index", "OTTest")"><i class="fa fa-plus"></i> Create</a>
                </li>
                @*<li>
                    <a href="@Url.Action("Update", "Opd")"><i class="fa fa-edit"></i> Update</a>
                </li>*@
                @*<li>
                        <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                    </li>*@

            </ul>
        </div>

    </div>
    @*<br />*@

    <div class="col-md-12">
        <div class="form-group">
            @Html.HiddenFor(model => model.COMPID, new { id = "txtcompid", style = "width:3em;", @Value = compid })
         
            @Html.HiddenFor(model => model.INSUSERID, new { id = "InUserID", style = "width:5em;", @Value = InUserId })


            <div ng-app="OTTestApp" data-ng-controller="ApiOpHeadController">
                <div class="row">
                    @Html.HiddenFor(model => model.COMPID, new { id = "txtcompid", style = "width:3em;", @Value = compid })
                    @Html.HiddenFor(model => model.OpHeadCID, new { id = "OpHeadCID", @class = "form-control", @readonly = "true", tabindex = "-1" })
                    <div class="col-md-6">
                        <label>Group Head Particulars</label>
                        <span>
                            @Html.TextBoxFor(model => model.OpHeadCName, new { @class = "form-control input-sm", id = "OpHeadCName"})
                        </span>
                    </div>
                    @*<div class="col-md-2">
                        <label>OpHeadCID</label>
                        <span>
                           
                        </span>
                    </div>*@
                  
                    <div class="col-md-2">

                        <input style="margin-top: 22px" type="submit" value="Add" data-ng-click="add($event)" class="btn btn-primary" />


                    </div>
                        @Html.TextBoxFor(model => model.INSLTUDE, new { id = "latlonPos", style = "display: none;" })
                        <input id="lat" type="hidden" />
                        <input id="lon" type="hidden" />

                       
            
                    </div>
                  
                <br/><br />

                <table class="table table-bordered table-hover col-md-12">

                    <tr>

                        <td class="col-md-6"><label>Test Information</label></td>
                        <td class="col-md-2"><label>Rate</label></td>
                        <td class="col-md-2"><label>Remarks</label></td>
                        <td class="col-md-2"></td>


                    </tr>
                    <tr>

                        <td class="col-md-6">
                            @Html.TextBoxFor(model => model.OpHeadName, new { data_ng_model = "newChild.OpHeadName", @class = "form-control", id = "OpHeadName" })
                            @*<input type="text" data-ng-model="newChild.TestName" id="testnm" required />*@
                        </td>
                        <td class="col-md-2">
                            @Html.TextBoxFor(model => model.Rate, new { data_ng_model = "newChild.Rate", @class = "form-control", id = "Rate" })
                            @*<input type="text" data-ng-model="newChild.Rate" id="rate" required />*@
                        </td>
                        <td class="col-md-2">
                            @Html.TextBoxFor(model => model.Remarks, new { data_ng_model = "newChild.Remarks", @class = "form-control", id = "Remarks" })

                            @*<input type="text" data-ng-model="newChild.PcnTD" id="pcntd" required />*@
                        </td>
                        <td class="col-md-2"><input type="submit" value="Insert" data-ng-click="addrow($event)" class="btn btn-primary" /></td>


                    </tr>
                    <tr data-ng-repeat="testitem in OpHead">

                        <td hidden><strong data-ng-hide="testitem.editMode">{{testitem.ID}}</strong></td>
                      
                        <td>
                            <p data-ng-hide="testitem.editMode">{{ testitem.OpHeadName }}</p>
                            @Html.TextBoxFor(model => model.OpHeadName, new { data_ng_show = "testitem.editMode", data_ng_model = "testitem.OpHeadName", @class = "form-control", id = "gridOpHeadName" })
                            @*<input data-ng-show="testitem.editMode" type="text" data-ng-model="testitem.OpHeadName" id="gridOpHeadName" />*@
                        </td>
                        <td>
                            <p data-ng-hide="testitem.editMode">{{ testitem.Rate }}</p>
                            @Html.TextBoxFor(model => model.Rate, new { data_ng_show = "testitem.editMode", data_ng_model = "testitem.Rate", @class = "form-control", id = "gridRate" })
                            @*<input data-ng-show="testitem.editMode" type="text" data-ng-model="testitem.Rate" id="gridRate" />*@
                        </td>
                        <td>
                            <p data-ng-hide="testitem.editMode">{{ testitem.Remarks }}</p>
                            @Html.TextBoxFor(model => model.Remarks, new { data_ng_show = "testitem.editMode", data_ng_model = "testitem.Remarks", @class = "form-control", id = "gridRemarks" })
                            @*<input data-ng-show="testitem.editMode" type="text" data-ng-model="testitem.Remarks" id="gridRemarks" />*@
                        </td>

                        <td>
                            <p data-ng-hide="testitem.editMode"><a data-ng-click="toggleEdit(testitem)" href="javascript:;">Edit</a> | <a data-ng-click="deleteitem(testitem)" href="javascript:;">Delete</a></p>
                            <p data-ng-show="testitem.editMode"><a data-ng-click="save(testitem)" href="javascript:;">Save</a> | <a data-ng-click="cancel()" href="javascript:;">Cancel</a></p>

                        </td>
                    </tr>
                </table>


                </div>




            </div>
        </div>
  

    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>


    <script type="text/javascript">
        $(document).ready(function () {
            document.getElementById("OpHeadCName").focus();
            $('#OpHeadCName').autocomplete({
                source: function (request, response) {
                    var compid = $('#txtcompid').val();
                    $.ajax({

                        url: '/api/HeadCName',
                        type: 'GET',
                        cache: false,
                        data: { query: request.term, query2: compid },
                        dataType: 'json',
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.OpHeadCName,
                                    value: item.OpHeadCName,
                                    id: item.OpHeadCID
                                  
                                };
                            }));
                        }
                    });
                },
                select: function (event, ui) {
                    $('#OpHeadCName').val(ui.item.label);
                    $('#OpHeadCID').val(ui.item.id);
                 


                    txtOneChanged();
                  
                },
                change: $('#OpHeadCName').keyup(_.debounce(txtOneChanged, 1000))
            });

           
        });

        function txtOneChanged() {


            var changedText = $("#OpHeadCName").val();
            var changedText2 = $('#txtcompid').val();

            var Name = document.getElementById('OpHeadCName');
            var txtBox = document.getElementById('OpHeadCID');
           

            
            if (changedText != "") {

                $.getJSON(
                    '/api/DynamicHeadCName', { "ChangedText": changedText, "ChangedText2": changedText2 },
                    function (result) {
                        Name.value = result[0].OpHeadCName;
                        txtBox.value = result[0].OpHeadCID;

                     
                       



                    });

            }



        }


      

    </script>


}

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>





<script src="~/Scripts/angularjs/1.0.5/angular.js"></script>

<script src="~/Scripts/OpHead/OpHead.js"></script>

<script src="~/Scripts/angularjs/ui-bootstrap-tpls-0.4.0.js"></script>




<script src="~/Scripts/Underscore.js"></script>














