@using System.Data
@using System.Data.SqlClient
@using System.Data.SqlTypes
@using AslHMS.DataAccess
@using AslHMS.Models
@model AslHMS.Models.PageModel

@{
    ViewBag.Title = "Get_Purchase_PurchaseReturn_Supplier";
    Layout = null;
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    AslHMSApiContext db = new AslHMSApiContext();
    var companyId = Convert.ToInt64(Model.Hms_PharmacyMst.COMPID);

    string companyName = "", address = "", contactNo = "", address2 = "";
    var re = from m in db.AslCompanyDbSet where m.COMPID == companyId select new { m.COMPNM, m.ADDRESS, m.CONTACTNO };
    foreach (var n in re)
    {
        companyName = n.COMPNM;
        address = n.ADDRESS;
        contactNo = n.CONTACTNO;
    }
    var compNm = companyName;
    var Address = address;
    var contactno = contactNo;

    DateTime fdate = Convert.ToDateTime(Model.Report_FromDate);
    string ddt = fdate.ToString("dd-MMM-yyyy");
    var fromdate = ddt;

    DateTime tDate = Convert.ToDateTime(Model.Report_ToDate);
    string tdd = tDate.ToString("dd-MMM-yyyy");
    var todate = tdd;


    var type = Convert.ToString(Model.TRANSTP);
    string transType = "";
    if (type == "BUY")
    {
        transType = "Purchase";
    }
    else if (type == "IRTB")
    {
        transType = "Purchase Return";
    }


    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);
}





<!DOCTYPE html>
<html lang="en">
<head>

    <link href="~/Content/reportcss/style.css" rel="stylesheet" />

</head>

<body style=" background-color:#fafafa;">
    <div style="width: 960px; margin: 0px auto; border: 1px solid #d3d3d3; border-radius: 5px; box-shadow: 0 0 5px rgba(0, 0, 0, 0.1); background: none repeat scroll 0 0 white;">
        <table id="mainTable" border="0" width="100%">
            <thead>
                <tr>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="10%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>

                </tr>
                <tr style="background-color: #00689b">
                    <td colspan="12">
                        <h3 style="color: white;padding:4px">@compNm</h3>
                        <p style="color:white;padding-left:4px">@Address<br /> @address2</p>
                    </td>

                    <td colspan="6" style="color: white;padding:8px" align="right">
                        Powered By<br />Alchemy Software
                    </td>

                </tr>
                <tr>
                    <td colspan="12" align="left" style="padding: 4px; font-weight: bold">@transType -Supplier</td>
                    <td align="right" colspan="6" style="padding: 8px">Print:@currentDateTime.ToString("dd-MM-yy hh:mm tt")</td>
                </tr>
                <tr style="outline: thin solid">
                    <td colspan="9" style="padding:4px;font-weight:bold">From Date : <span style="font-weight: bold">@fromdate</span></td>
                    <td colspan="9" style="font-weight: bold"> To Date : <span style="font-weight:bold">@todate</span></td>
                </tr>

                <tr style="background-color: #00689b; outline: thin solid">
                    <td colspan="6" style="color: white; padding: 4px" align="center">Item Name</td>
                    <td colspan="3" style="color: white; padding: 4px" align="center">Amount</td>
                    <td colspan="3" style="color: white; padding: 4px" align="center">Vat</td>
                    <td colspan="3" style="color: white; padding: 4px" align="center">Discount</td>
                    <td colspan="3" style="color: white; padding: 4px" align="center">Gross</td>
                </tr>
            </thead>
            <tbody>
                @{
                    Decimal total_QTY = 0, total_RATE = 0, total_AMOUNT = 0, total_DISCAMT = 0, total_GROSSAMT = 0;
                }
                @{
                    System.Data.SqlClient.SqlConnection conn1 = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["AslHMSApiContext"].ToString());
                    string query1 = string.Format(
                        @"SELECT SUPPLIERID, ACCOUNTNM, SUM(ISNULL(TOTAMT,0)) TOTAMT, SUM(ISNULL(VATAMT,0)) VATAMT, SUM(ISNULL(DISCOUNT,0)) DISCOUNT, SUM(ISNULL(NETAMT,0)) NETAMT
FROM HMS_PHARMMST A INNER JOIN GL_ACCHART B ON A.COMPID = B.COMPID AND A.SUPPLIERID = B.ACCOUNTCD
WHERE A.COMPID = '{0}' AND TRANSTP = '{1}' AND TRANSDT BETWEEN '{2}' AND '{3}'
GROUP BY SUPPLIERID, ACCOUNTNM",
                        companyId, type, fdate, todate);
                    System.Data.SqlClient.SqlCommand cmd1 = new System.Data.SqlClient.SqlCommand(query1, conn1);
                    conn1.Open();
                    SqlDataAdapter da1 = new SqlDataAdapter(cmd1);
                    DataTable ds1 = new DataTable();
                    da1.Fill(ds1);

                    string itemname = "";
                    decimal amount = 0, vat=0,discount = 0, gross = 0;

                    foreach (DataRow row in ds1.Rows)
                    {
                        itemname = row["ACCOUNTNM"].ToString();
                        amount = Convert.ToDecimal(string.Format("{0:0.00}", row["TOTAMT"]));
                        vat = Convert.ToDecimal(string.Format("{0:0.00}", row["VATAMT"]));
                        discount = Convert.ToDecimal(string.Format("{0:0.00}", row["DISCOUNT"]));
                        gross = Convert.ToDecimal(string.Format("{0:0.00}", row["NETAMT"]));

                        string cAmount = CommainAmount.AmountwithComma(amount.ToString());
                        string cRate = CommainAmount.AmountwithComma(vat.ToString());
                        string cDiscount = CommainAmount.AmountwithComma(discount.ToString());
                        string cGrossamt = CommainAmount.AmountwithComma(gross.ToString());

                        <tr style="outline:thin solid">
                            <td align="left" colspan="6" style="padding-left: 4px">
                                @itemname
                            </td>
                            <td align="center" colspan="3">
                                @cAmount
                            </td>
                            <td align="right" colspan="3">
                                @cRate
                            </td>
                            <td align="right" colspan="3">
                                @cDiscount
                            </td>
                            <td align="right" colspan="3">
                                @cGrossamt
                            </td>
                        </tr>

                        //total_QTY = total_QTY + QTY;
                        //total_RATE = total_RATE + RATE;
                        //total_AMOUNT = total_AMOUNT + AMOUNT;
                        //total_DISCAMT = total_DISCAMT + DISCAMT;
                        //total_GROSSAMT = total_GROSSAMT + GROSSAMT;

                    }
                    conn1.Close();
                }

                @*<tr>
                        <td colspan="2"></td>
                        <td colspan="2"></td>
                        <td colspan="1"></td>
                        <td align="right" colspan="3" style="font-weight:bold">
                            Total:
                        </td>
                        <td align="right" colspan="2" style="font-weight:bold">
                            @total_BQTY
                        </td>
                        <td align="right" colspan="2" style="font-weight:bold">
                            @total_SQTY
                        </td>
                        <td align="right" colspan="2" style="font-weight:bold">
                            @total_INQTY
                        </td>
                        <td align="right" colspan="2" style="font-weight:bold">
                            @total_OUTQTY
                        </td>
                        <td align="right" colspan="2" style="font-weight:bold">
                            @{
                                total_Balance = Opening + total_BQTY - total_SQTY + total_INQTY - total_OUTQTY;
                            }
                            @total_Balance
                        </td>
                    </tr>*@

            </tbody>
        </table>
    </div>

</body>
</html>




