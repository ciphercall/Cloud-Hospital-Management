@using AslHMS.Models
@model AslHMS.Models.DTO.CabinBedDTO

@{
    ViewBag.Title = "Index";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    var InUserId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedUserID"]);

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }
    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);

    AslHMSApiContext db = new AslHMSApiContext();




    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);
    string date = currentDateTime.ToString("yyyy-MM-dd");
    string year = date.Substring(0, 4);

    string time = currentDateTime.ToString().Substring(17, 2);
   
    
    
    List<SelectListItem>listcabintype=new List<SelectListItem>();
    listcabintype.Add(new SelectListItem{Text="PATIENT",Value = "PATIENT"});
    listcabintype.Add(new SelectListItem { Text = "RELATIVE", Value = "RELATIVE" });

    List<SelectListItem> listcabinHead = new List<SelectListItem>();
    var findheadname = (from n in db.HMS_HEADIO where n.COMPID == compid && n.HEADTP == "ICB" select n).ToList();
    foreach (var item in findheadname)
    {
        listcabinHead.Add(new SelectListItem{Text=item.HEADNM,Value=Convert.ToString(item.HEADID)});
    }
}

<link href="~/Content/newcss/jquery-ui.css" rel="stylesheet" />


<link href="~/Content/newcss/ng-grid.css" rel="stylesheet" />
<link rel="stylesheet" href="~/Content/style.css" />
<link href="~/Content/bootstrap_datepicker_css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap_datepicker_css/datepicker3.css" rel="stylesheet" />

@*bootstrap -Clock Picker*@
<link href="~/Content/bootstrap_clock_picker/src/clockpicker.css" rel="stylesheet" />

<link href="~/Content/bootstrap_clock_picker/src/standalone.css" rel="stylesheet" />


<script src="~/Content/jquery1.8.0/jquery.min.js"></script>


<script src="~/Content/jquery1.9.1/jquery-1.9.1.js"></script>


<script src="~/Content/jquery1.10.3/jquery-ui.js"></script>

<script src="~/Content/bootstrap_clock_picker/src/clockpicker.js"></script>


@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Cabin/Bed Information</h1>

        <div class="btn-group pull-right" id="editOption">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i>
            </button>
            <ul class="dropdown-menu pull-right" style="" role="menu">

                <li>
                    <a href="@Url.Action("Index", "CabinBed")"><i class="fa fa-plus"></i> Create</a>
                </li>
                @*<li>
                        <a href="@Url.Action("Update", "Opd")"><i class="fa fa-edit"></i> Update</a>
                    </li>*@
                @*<li>
                        <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                    </li>*@

            </ul>
        </div>

    </div>
    <div class="col-md-12">
        <div class="form-group">
            @Html.HiddenFor(model => model.COMPID, new { id = "txtcompid", style = "width:3em;", @Value = compid })

            @Html.HiddenFor(model => model.INSUSERID, new { id = "InUserID", style = "width:5em;", @Value = InUserId })
            
            <div ng-app="CabinBedApp" data-ng-controller="ApiCabinBedController">
                
                <div class="row">
                    @Html.HiddenFor(model => model.COMPID, new { id = "txtcompid", style = "width:3em;", @Value = compid })

                    <div class="col-md-2">
                        <label>Year</label>
                        <span>
                            @Html.TextBoxFor(model => model.PatientYear, new { @class = "form-control input-sm", id = "PatientYear", @Value = year })
                        </span>
                    </div>
                    <div class="col-md-2">
                        <label>Patient ID</label>
                        <span>
                            @Html.TextBoxFor(model => model.PatientYearID, new { id = "PatientYearID", @class = "form-control", autofocus = "true" })
                        </span>
                    </div>
                    <div class="col-md-7">
                        <label>Patient Name</label>
                        <span>
                            @Html.TextBoxFor(model => model.PatientName, new { id = "PatientName", @class = "form-control", @readonly = "true", tabindex = "-1" })
                        </span>
                    </div>
                    <div class="col-md-1">

                        <input style="margin-top: 22px" type="submit" value="Add" data-ng-click="add($event)" class="btn btn-primary" />


                    </div>
                    @Html.TextBoxFor(model => model.INSLTUDE, new { id = "latlonPos", style = "display: none;" })
                    <input id="lat" type="hidden" />
                    <input id="lon" type="hidden" />



                </div>

                <br /><br />

                <table class="table table-bordered table-hover col-md-12">

                    <tr>

                        <td style="width:12%"><label>Type</label></td>
                        <td style="width:20%"><label>Particulars</label></td>
                        <td style="width:13%"><label>Date From</label></td>
                        <td style="width:10%"><label>Time From</label></td>
                        <td style="width:13%"><label>Date To</label></td>
                        <td style="width:10%"><label>Time To</label></td>
                        <td style="width:7%"><label>Hours</label></td>
                        <td style="width:7%"><label>Days</label></td>
                      
                        <td style="width:8%"></td>


                    </tr>
                    <tr>
                        <td style="width:12%">
                            @Html.DropDownListFor(model => model.CabinType, listcabintype,new {  @class = "form-control input-sm", id = "CabinType" })

                        </td>
                        <td style="width:20%">
                            @Html.DropDownListFor(model => model.CabinHead, listcabinHead, new { data_ng_model = "newChild.CabinHead", @class = "form-control input-sm", id = "CabinHead" })

                        </td>
                        <td style="width:13%">
                            @Html.TextBoxFor(model => model.EFDT, new { data_ng_model = "newChild.EFDT", @class = "form-control input-sm", id = "EFDT" })

                        </td>

                        <td style="width:10%" class="clockpicker" data-align="top" data-autoclose="true">
                            @Html.TextBoxFor(model => model.EFTM, new { @class = "form-control input-sm", id = "EFTM" })

                        </td>
                        @*<td style="width:10%">
                            @Html.TextBoxFor(model => model.EFTM, new { data_ng_model = "newChild.EFTM", @class = "form-control input-sm", id = "EFTM" })


                        </td>*@
                        <td style="width:13%">
                            @Html.TextBoxFor(model => model.ETDT, new { data_ng_model = "newChild.ETDT", @class = "form-control input-sm", id = "ETDT" })

                        </td>
                        <td style="width:10%" class="clockpicker" data-align="top" data-autoclose="true">
                            @Html.TextBoxFor(model => model.ETTM, new { @class = "form-control input-sm", id = "ETTM", @Value = "00:01" })


                        </td>

                        <td style="width:7%">
                            @Html.TextBoxFor(model => model.TotalHours, new { data_ng_model = "newChild.TotalHours", @class = "form-control input-sm", id = "TotalHours", @readonly = "readonly", tabindex = "-1" })


                        </td>
                        <td style="width:7%">
                            @Html.TextBoxFor(model => model.TotalDays, new { data_ng_model = "newChild.TotalDays", @class = "form-control input-sm", id = "TotalDays", @readonly = "readonly", tabindex = "-1" })


                        </td>
                        @*<td style="width:10%">
                            @Html.TextBoxFor(model => model.Remarks, new { data_ng_model = "newChild.Remarks", @class = "form-control input-sm", id = "Remarks" })


                        </td>*@
                        <td style="width:8%"><input type="submit" value="Insert" data-ng-click="addrow($event)" class="btn btn-primary" /></td>
                      


                    </tr>
                    <tr data-ng-repeat="item in ICBData">
                        <td hidden><strong data-ng-hide="item.editMode">{{item.ID}}</strong></td>

                        <td>
                            <p data-ng-hide="item.editMode">{{ item.CabinType }}</p>
                            @Html.DropDownListFor(model => model.CabinType,listcabintype, new { data_ng_show = "item.editMode", data_ng_model = "item.CabinType", @class = "form-control", id = "gridCabinType" })
                           
                        </td>
                        <td>
                            <p data-ng-hide="item.editMode">{{ item.CabinHead }}</p>
                            @Html.DropDownListFor(model => model.CabinHead,listcabinHead, new { data_ng_show = "item.editMode", data_ng_model = "item.CabinHead", @class = "form-control", id = "gridCabinHead" })

                        </td>
                        <td>
                            <p data-ng-hide="item.editMode">{{ item.EFDT }}</p>
                            @*@Html.TextBoxFor(model => model.EFDT, new { data_ng_show = "item.editMode", data_ng_model = "item.EFDT", @class = "form-control", id = "gridEFDT" })*@
                            <input class="form-control input-sm date" data-ng-show="item.editMode" type="date" data-ng-model="item.EFDT" id="gridEFDT" />
                        </td>
                        <td>
                            <p data-ng-hide="item.editMode">{{ item.EFTM }}</p>
                            @Html.TextBoxFor(model => model.EFTM, new { data_ng_show = "item.editMode", data_ng_model = "item.EFTM", @class = "form-control", id = "gridEFTM" })

                        </td>
                        <td>
                            <p data-ng-hide="item.editMode">{{ item.ETDT }}</p>
                            @Html.TextBoxFor(model => model.ETDT, new { data_ng_show = "item.editMode", data_ng_model = "item.ETDT", @class = "form-control", id = "gridETDT" })

                        </td>
                        <td>
                            <p data-ng-hide="item.editMode">{{ item.ETTM }}</p>
                            @Html.TextBoxFor(model => model.ETTM, new
                       {
                           data_ng_show = "item.editMode",
                           data_ng_model = "item.ETTM",
                           @class = "form-control",
                           id = "gridETTM",
                         ng_keypress = "myFunct($event, item.ETTM)"
                       })
                           
                        </td>
                        <td>
                            <p data-ng-hide="item.editMode">{{ item.TotalHours }}</p>
                            @Html.TextBoxFor(model => model.TotalHours, new { data_ng_show = "item.editMode", data_ng_model = "item.TotalHours", @class = "form-control", id = "gridTotalHours" })

                        </td>
                        <td>
                            <p data-ng-hide="item.editMode">{{ item.TotalDays }}</p>
                            @Html.TextBoxFor(model => model.TotalDays, new { data_ng_show = "item.editMode", data_ng_model = "item.TotalDays", @class = "form-control", id = "gridTotalDays" })

                        </td>
                        <td>
                            <p data-ng-hide="item.editMode">{{ item.Remarks }}</p>
                            @Html.TextBoxFor(model => model.Remarks, new { data_ng_show = "item.editMode", data_ng_model = "item.Remarks", @class = "form-control", id = "gridRemarks" })
                         
                        </td>

                        <td>
                            <p data-ng-hide="item.editMode"><a data-ng-click="toggleEdit(item)" href="javascript:;">Edit</a> | <a data-ng-click="deleteitem(item)" href="javascript:;">Delete</a></p>
                            <p data-ng-show="item.editMode"><a data-ng-click="save(item)" href="javascript:;">Save</a> | <a data-ng-click="cancel()" href="javascript:;">Cancel</a></p>

                        </td>
                    </tr>
                </table>

            </div>



            </div>
    </div>

     //datatime picker script
    <script type="text/javascript">
        $('.clockpicker').clockpicker();
    </script>
    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>
    
    
  <script type="text/javascript">
      $(document).ready(function () {

          $("#PatientYear").datepicker({
              format: "yyyy", // Notice the Extra space at the beginning
              viewMode: "years",
              minViewMode: "years",
              autoclose: true
          });




          $('#PatientYearID').autocomplete({
              source: function(request, response) {
                  var compid = $('#txtcompid').val();
                  var year = $("#PatientYear").val();
                  $.ajax({
                      url: '/apiCabinBed/PatientYID',
                      type: 'GET',
                      cache: false,
                      data: { query: request.term, query2: compid,query3:year },
                      dataType: 'json',
                      success: function(data) {
                          response($.map(data, function(item) {
                              return {
                                  label: item,
                                  value: item,


                              };
                          }));
                      }
                  });
              },
              select: function(event, ui) {
                  $('#PatientYearID').val(ui.item.label);


                  txtOneChanged();

              },
              change: $('#PatientYearID').keyup(_.debounce(txtOneChanged, 1000))
          });

          $('#ETDT').datepicker({
              format: "dd-M-yyyy",
              autoclose: true,
              todayHighlight: true,
              showOnFocus: true,
          }).on('show', function(e) {
              if (e.date) {
                  $(this).data('stickyDate', e.date);
              } else {
                  $(this).data('stickyDate', null);

              }
          }).on('hide', function(e) {
              var stickyDate = $(this).data('stickyDate');

              if (!e.date && stickyDate) {
                  $(this).datepicker('setDate', stickyDate);
                  $(this).data('stickyDate', null);
              }
              document.getElementById("ETTM").focus();
              var changedText = $("#EFDT").val();
              var changedText2 = $('#ETDT').val();
              var Eftm = $("#EFTM").val();
              var Ettm = $('#ETTM').val();
              var txtBox = document.getElementById('TotalDays');
              var txtBox2 = document.getElementById('TotalHours');

              $.getJSON(
                    '/api/DaysCalculate', { "ChangedText": changedText, "ChangedText2": changedText2, "EFTM": Eftm, "ETTM": Ettm },
                    function (result) {

                        txtBox.value = result[0];
                        txtBox2.value = result[1];

                        //document.getElementById('Remarks').focus();
                    });

          });

          $('#EFDT').datepicker({
              format: "dd-M-yyyy",
              autoclose: true,
              todayHighlight: true,
              showOnFocus: true,
          }).on('show', function (e) {
              if (e.date) {
                  $(this).data('stickyDate', e.date);
              } else {
                  $(this).data('stickyDate', null);

              }
          }).on('hide', function (e) {
              var stickyDate = $(this).data('stickyDate');

              if (!e.date && stickyDate) {
                  $(this).datepicker('setDate', stickyDate);
                  $(this).data('stickyDate', null);
              }
              document.getElementById("EFTM").focus();
              var changedText = $('#EFDT').val();
              var changedText2 = $('#txtcompid').val();
              var txtBox = document.getElementById("ETDT");
              var txtBox2 = document.getElementById("EFTM");
              var txtBox3 = document.getElementById("ETTM");
              var txtBox4 = document.getElementById("TotalDays");
              var txtBox5 = document.getElementById("TotalHours");
            
              $.getJSON(
                  '/apiCabinBed/tomorrowCalculation', { "ChangedText": changedText, "ChangedText2": changedText2 },
                  function (result) {

                      txtBox.value = result[0];
                      txtBox2.value = result[1];
                      txtBox3.value = result[1];
                      txtBox4.value = result[2];
                      txtBox5.value = result[3];

                     
                  });
             

              //$("#ETDT").val(tomorrow);
          });
      
         
          $('#ETTM').change(function () {
              var changedText = $("#EFDT").val();
              var changedText2 = $('#ETDT').val();
              var Eftm = $("#EFTM").val();
              var Ettm = $('#ETTM').val();
              var txtBox = document.getElementById('TotalDays');
              var txtBox2 = document.getElementById('TotalHours');
              
              $.getJSON(
                    '/api/DaysCalculate', { "ChangedText": changedText, "ChangedText2": changedText2, "EFTM": Eftm, "ETTM": Ettm },
                    function (result) {
                        
                        txtBox.value = result[0];
                        txtBox2.value = result[1];

                        //document.getElementById('Remarks').focus();
                    });

          });
          
         
          
        });



        function txtOneChanged() {


            var changedText = $("#PatientYearID").val();
            var changedText2 = $('#txtcompid').val();
            var changedText3 = $('#PatientYear').val();

            //var Name = document.getElementById('PatientYearID');
            var txtBox = document.getElementById('PatientYearID');
           
            var txtBox2 = document.getElementById('PatientName');
            
            if (changedText != "") {

                $.getJSON(
                    '/api/DynamicPatinetYearId', { "ChangedText": changedText, "ChangedText2": changedText2, "ChangedText3": changedText3 },
                    function (result) {
                        //Name.value = result[0].OpHeadCName;
                        txtBox.value = result;

                     
                       



                    });
                $.getJSON(
                    '/api/PatientName', { "ChangedText": changedText, "ChangedText2": changedText2 },
                    function (result) {
                        //Name.value = result[0].OpHeadCName;
                        txtBox2.value = result;






                    });
            }



        }


      

    </script>

    
}


<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>


<script src="~/Scripts/angularjs/1.0.5/angular.js"></script>

<script src="~/Scripts/CabinBed/CabinBed.js"></script>

<script src="~/Scripts/angularjs/ui-bootstrap-tpls-0.4.0.js"></script>




<script src="~/Scripts/Underscore.js"></script>
