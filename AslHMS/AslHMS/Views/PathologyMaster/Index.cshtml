@using AslHMS.Models
@model AslHMS.Models.DTO.PathologyDTO

@{
    ViewBag.Title = "Index";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    var InUserId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedUserID"]);

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }
    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);

    AslHMSApiContext db = new AslHMSApiContext();




    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);

    string date = currentDateTime.ToString("yyyy-MM-dd");
    string year = date.Substring(0, 4);


    List<SelectListItem> testlist = new List<SelectListItem>();
    //listcabintype.Add(new SelectListItem { Text = "PATIENT", Value = "PATIENT" });
    //listcabintype.Add(new SelectListItem { Text = "RELATIVE", Value = "RELATIVE" });

    //List<SelectListItem> listcabinHead = new List<SelectListItem>();
    var testdata = (from n in db.HMS_TEST where n.COMPID == compid select n).ToList();
    foreach (var item in testdata)
    {
        testlist.Add(new SelectListItem { Text = item.TESTNM, Value = Convert.ToString(item.TESTID) });
    }
}
<link href="~/Content/newcss/jquery-ui.css" rel="stylesheet" />


<link href="~/Content/newcss/ng-grid.css" rel="stylesheet" />
<link rel="stylesheet" href="~/Content/style.css" />
<link href="~/Content/bootstrap_datepicker_css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap_datepicker_css/datepicker3.css" rel="stylesheet" />


@*bootstrap -Clock Picker*@
<link href="~/Content/bootstrap-clock%20picker/src/clockpicker.css" rel="stylesheet" />
<script src="~/Content/bootstrap-clock%20picker/src/clockpicker.js"></script>
<link href="~/Content/bootstrap-clock%20picker/src/standalone.css" rel="stylesheet" />

@*<script src="~/Content/jquery1.8.0/jquery.min.js"></script>


<script src="~/Content/jquery1.9.1/jquery-1.9.1.js"></script>


<script src="~/Content/jquery1.10.3/jquery-ui.js"></script>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Pathology Information</h1>

        <div class="btn-group pull-right" id="editOption">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i>
            </button>
            <ul class="dropdown-menu pull-right" style="" role="menu">

                <li>
                    <a href="@Url.Action("Index", "PathologyMaster")"><i class="fa fa-plus"></i> Create</a>
                </li>
                @*<li>
                        <a href="@Url.Action("Update", "Opd")"><i class="fa fa-edit"></i> Update</a>
                    </li>*@
                @*<li>
                        <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                    </li>*@

            </ul>
        </div>

    </div>

    <div class="col-md-12">
        <div class="form-group">
            @*@Html.HiddenFor(model => model.COMPID, new { id = "txtcompid", style = "width:3em;", @Value = compid })*@

            @Html.HiddenFor(model => model.INSUSERID, new { id = "InUserID", style = "width:5em;", @Value = InUserId })
            <div ng-app="Pathology" data-ng-controller="ApiPathologyController">
                <div class="row">
                    @Html.HiddenFor(model => model.COMPID, new { id = "txtcompid", style = "width:3em;", @Value = compid })

                    <div class="col-md-2">
                        <label>Date</label>
                        <span>
                            @Html.TextBoxFor(model => model.TRANSDT, new { @class = "form-control input-sm", id = "TRANSDT" })
                        </span>
                    </div>
                    <div class="col-md-2">
                        <label>Month</label>
                        <span>
                            @Html.TextBoxFor(model => model.TRANSMY, new { @class = "form-control input-sm", id = "TRANSMY", @readonly = "true",tabIndex="-1" })
                        </span>
                    </div>
                    <div class="col-md-2">
                        <label>Trans No</label>
                        <span>
                            @Html.TextBoxFor(model => model.TRANSNO, new { id = "TRANSNO", @class = "form-control", @readonly = "true", tabIndex = "-1" })
                        </span>
                    </div>
                    <div class="col-md-2">
                        <label>Year</label>
                        <span>
                            @Html.TextBoxFor(model => model.PATIENTYY, new { id = "PATIENTYY", @class = "form-control" })
                        </span>
                    </div>
                    <div class="col-md-3">
                        <label>Patient YearID</label>
                        <span>
                            @Html.TextBoxFor(model => model.PATIENTYYID, new { id = "PATIENTYYID", @class = "form-control" })
                        </span>
                    </div>

                    @*<div class="col-md-2">

                            <input style="margin-top: 22px" type="submit" value="Submit" data-ng-click="add($event)" class="btn btn-primary" id="submit" />


                        </div>*@
                    @Html.TextBoxFor(model => model.INSLTUDE, new { id = "latlonPos", style = "display: none;" })
                    <input id="lat" type="hidden" />
                    <input id="lon" type="hidden" />



                </div>
                <div class="row">
                    <div class="col-md-2">
                        <label>Patinet Name</label>
                        <span>
                            @Html.TextBoxFor(model => model.PatientName, new { @class = "form-control input-sm", id = "PatientName", @readonly = "true", tabIndex = "-1" })
                        </span>
                    </div>
                    <div class="col-md-2">
                        <label>Delivery Date</label>
                        <span>
                            @Html.TextBoxFor(model => model.DVDT, new { @class = "form-control input-sm", id = "DVDT" })
                        </span>
                    </div>
                    <div class="col-md-2">
                        <label>Delivery Time</label>
                        <div class="input-group clockpicker" data-align="top" data-autoclose="true">


                            @Html.TextBoxFor(model => model.DVTM, htmlAttributes: new { id = "DVTM", @class = "form-control input-sm", @Value = "00:01" })

                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-time"></span>
                            </span>
                        </div>
                        @*<span>
                            @Html.TextBoxFor(model => model.DVTM, new { @class = "form-control input-sm", id = "DVTM", @Value = "00:01" })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-time"></span>
                            </span>
                        </span>*@
                       
                    </div>
                    <div class="col-md-2">
                        <label>Remarks</label>
                        <span>
                            @Html.TextBoxFor(model => model.REMARKS, new { @class = "form-control input-sm", id = "REMARKS" })
                        </span>
                    </div>
                  
                    <div class="col-md-2">

                        <input style="margin-top: 22px" type="submit" value="Submit" data-ng-click="add($event)" class="btn btn-primary" id="submit" />


                    </div>
                </div>
                <br /><br />

                <table class="table table-bordered table-hover col-md-12">

                    <tr>

                        <td class="col-md-3"><label>Test Name</label></td>
                        <td class="col-md-3"><label>Amount</label></td>
                        
                        <td class="col-md-3"><label>Remarks</label></td>
                        <td class="col-md-3"></td>


                    </tr>
                    <tr>


           
                        <td class="col-md-3">
                            @Html.DropDownListFor(model => model.TESTID,testlist,"--Select--", new { data_ng_model = "newChild.TESTID", @class = "form-control", id = "TESTID" })

                        </td>
                        <td class="col-md-3">
                            @Html.TextBoxFor(model => model.AMOUNT, new { data_ng_model = "newChild.AMOUNT", @class = "form-control", id = "AMOUNT",@readonly="readonly" })

                        </td>
                        <td class="col-md-3">
                            @Html.TextBoxFor(model => model.PathologyRemarks, new { data_ng_model = "newChild.PathologyRemarks", @class = "form-control", id = "PathologyRemarks" })

                        </td>
                       


                        <td class="col-md-3"><input type="submit" value="Insert" data-ng-click="addrow($event)" class="btn btn-primary" /></td>



                    </tr>
                    <tr data-ng-repeat="item in Pathology">
                        <td hidden><strong data-ng-hide="item.editMode">{{item.ID}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.TESTSL}}</strong></td>
                      
                        <td>
                            <p data-ng-hide="item.editMode">{{ item.TESTNM }}</p>
                            @Html.DropDownListFor(model => model.TESTID, testlist, new { data_ng_show = "item.editMode", data_ng_model = "item.TESTID", @class = "form-control", id = "gridTESTID" })

                        </td>
                        <td>
                            <p data-ng-hide="item.editMode">{{ item.AMOUNT }}</p>
                            @*@Html.TextBoxFor(model => model.DoctorName, new { data_ng_show = "item.editMode", data_ng_model = "item.DoctorName", @class = "form-control gridDoctorName", ng_change = "x(item.DoctorName)" })*@

                        </td>
                      
                        <td>
                            <p data-ng-hide="item.editMode">{{ item.PathologyRemarks }}</p>

                            @Html.TextBoxFor(model => model.PathologyRemarks, new { data_ng_show = "item.editMode", data_ng_model = "item.PathologyRemarks", @class = "form-control", id = "gridPathologyRemarks" })
                        </td>



                        <td>
                            <p data-ng-hide="item.editMode"><a data-ng-click="toggleEdit(item)" href="javascript:;">Edit</a> | <a data-ng-click="deleteitem(item)" href="javascript:;">Delete</a></p>
                            <p data-ng-show="item.editMode"><a data-ng-click="save(item)" href="javascript:;">Save</a> | <a data-ng-click="cancel()" href="javascript:;">Cancel</a></p>

                        </td>
                    </tr>
                    
                    

                </table>

            </div>

        </div>


    </div>
    
    
     //datatime picker script
    <script type="text/javascript">
        $('.clockpicker').clockpicker();
    </script>
    
      //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function() {



            $('#TRANSDT').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function (e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                } else {
                    $(this).data('stickyDate', null);

                }
            }).on('hide', function (e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }

            }).on('changeDate', dateChanged);

            $("#PATIENTYY").datepicker({
                format: "yyyy", // Notice the Extra space at the beginning
                viewMode: "years",
                minViewMode: "years",
                autoclose: true
            }).on('hide', function (e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }
                document.getElementById("PATIENTYYID").focus();
            });


            $('#DVDT').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function (e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                } else {
                    $(this).data('stickyDate', null);

                }
            }).on('hide', function (e) {
                var stickyDate = $(this).data('stickyDate');

                if (!e.date && stickyDate) {
                    $(this).datepicker('setDate', stickyDate);
                    $(this).data('stickyDate', null);
                }

            });


            $('#PATIENTYYID').autocomplete({
                source: function (request, response) {
                    var compid = $('#txtcompid').val();
                    var year = $('#PATIENTYY').val();
                    $.ajax({
                        url: '/api/apiPatinetConsult/PatientYID',
                        type: 'GET',
                        cache: false,
                        data: { query: request.term, query2: compid, Year: year },
                        dataType: 'json',
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item,
                                    value: item,


                                };
                            }));
                        }
                    });
                },
                select: function (event, ui) {
                    $('#PATIENTYYID').val(ui.item.label);


                    txtOneChanged();

                },
                change: $('#PATIENTYYID').keyup(_.debounce(txtOneChanged, 500))
            });

            $('#TESTID').change(function () {
                var compid = $('#txtcompid').val();
                var testid = $('#TESTID').val();
                $.ajax({
                    url: '/ApiPathologyMst/getAmount',
                    type: 'GET',
                    cache: false,
                    data: { Testid: testid, Compid: compid },
                    dataType: 'json',
                    success: function (data) {
                        $('#AMOUNT').val(data);

                        document.getElementById("PathologyRemarks").focus();
                    }
                });
            });

        });


        function dateChanged(ev) {


            var changedtxt = $('#TRANSDT').val();
            var changedtxt2 = $('#txtcompid').val();

            var txttransYear = document.getElementById('TRANSMY');
            var txttransNo = document.getElementById('TRANSNO');

            $("#idTransMonth").val("");

            $("#idTransNO").val("");

            $.getJSON(
                "apiPathologyMst/getMYAndTansno", { "Changedtxt": changedtxt, "Changedtxt2": changedtxt2 },
                function (myData) {
                    txttransYear.value = myData[0];
                    txttransNo.value = myData[1];


                    document.getElementById("PATIENTYY").focus();
                });

        }
    

        function txtOneChanged() {


            var changedText = $("#PATIENTYYID").val();
            var changedText2 = $('#txtcompid').val();
            var year = $('#PATIENTYY').val();

            //var Name = document.getElementById('PatientYearID');
            var txtBox = document.getElementById('PATIENTYYID');

            var txtBox2 = document.getElementById('PatientName');

            if (changedText != "") {
                $.getJSON(
                 '/api/PatientName', { "ChangedText": changedText, "ChangedText2": changedText2 },//apiCabinBed
                 function (result) {

                     txtBox2.value = result;






                 });

                $.getJSON(
                    '/api/apiPatinetConsult/DynamicPatinetYearId', {
                        "ChangedText": changedText, "ChangedText2": changedText2, "Year": year
                    },
                    function (result) {

                        txtBox.value = result;






                    });
             
            }



        }
    
    </script>
    
    


        }


        <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

            <script src="~/Scripts/jquery-ui-1.10.4.min.js">
    </script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>

<script src="~/Scripts/angularjs/1.0.5/angular.js"></script>

<script src="~/Scripts/Pathology/Pathology.js"></script>

<script src="~/Scripts/angularjs/ui-bootstrap-tpls-0.4.0.js"></script>




<script src="~/Scripts/Underscore.js"></script>